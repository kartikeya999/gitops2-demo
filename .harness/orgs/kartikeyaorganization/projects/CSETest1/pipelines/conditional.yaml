pipeline:
  name: conditional
  identifier: conditional
  projectIdentifier: CSETest1
  orgIdentifier: kartikeyaorganization
  tags: {}
  stages:
    - stage:
        name: test
        identifier: test
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - stepGroup:
                  name: temp2
                  identifier: temp2
                  template:
                    templateRef: account.temp1
                    versionLabel: v1
                    templateInputs:
                      variables:
                        - name: terraformPluginIdentifier
                          type: String
                          value: <+input>
              - stepGroup:
                  name: test
                  identifier: test
                  steps:
                    - step:
                        type: ShellScript
                        name: ShellScript_1
                        identifier: ShellScript_1
                        spec:
                          shell: Bash
                          executionTarget: {}
                          source:
                            type: Inline
                            spec:
                              script: echo <+<+execution.steps.<+stepGroup.variables.tfplan>.plan.jsonFilePath>>
                          environmentVariables:
                            - name: terraformJsonFilePath
                              type: String
                              value: <+<+execution.steps.<+stepGroup.variables.tfplan>.plan.jsonFilePath>>
                          outputVariables: []
                        timeout: 10m
                  variables:
                    - name: tfplan
                      type: String
                      value: <+input>
                      description: ""
                      required: false
            rollbackSteps: []
          serviceDependencies: []
        tags: {}
    - stage:
        name: git
        identifier: git
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: k8s
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  manifests:
                    - manifest:
                        identifier: values
                        type: Values
                        spec:
                          store:
                            type: Github
                            spec:
                              branch: <+input>
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
          environment:
            environmentRef: env
            deployToAll: false
            infrastructureDefinitions:
              - identifier: prod
          execution:
            steps:
              - stepGroup:
                  name: git
                  identifier: git
                  steps:
                    - step:
                        type: GitClone
                        name: GitClone_1
                        identifier: GitClone_1
                        spec:
                          repoName: CI-Testcase
                          build:
                            type: branch
                            spec:
                              branch: main
                  stepGroupInfra:
                    type: KubernetesDirect
                    spec:
                      connectorRef: account.k8s
                      namespace: kartikeya-ng
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
